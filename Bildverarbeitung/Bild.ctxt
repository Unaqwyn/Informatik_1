#BlueJ class context
comment0.target=Bild
comment0.text=\r\n\ Klasse\ zur\ Verarbeitung\ von\ Bildern.\r\n\ \r\n\ @author\ Carlo\ Bach\r\n\ @version\ 16.2.2016\r\n
comment1.params=
comment1.target=Bild()
comment1.text=\r\n\ Erzeuge\ ein\ neues\ leeres\ Bild\ mit\ dem\ Titel\ "Kein\ Bild".\r\n
comment10.params=
comment10.target=int\ getDarkest()
comment11.params=
comment11.target=int\ getBrightest()
comment12.params=
comment12.target=void\ printHistogramm()
comment13.params=
comment13.target=void\ bild_invertieren()
comment13.text=\r\n\ Aufgabe\:\ Invertieren\ \r\n
comment14.params=offset
comment14.target=void\ bild_aufhellen(int)
comment14.text=\r\n\ Aufgabe\:\ Aufhellen\ um\ einen\ Offset\ anheben\r\n\ \r\n\ @param\ offset\ der\ Offset,\ um\ den\ die\ Intensitaetswerte\ angehoben\ werden\r\n
comment15.params=faktor
comment15.target=void\ bild_kontrastErhoehen(double)
comment15.text=\r\n\ Aufgabe\:\ Kontrast\ um\ einen\ Faktor\ erh\u00F6hen\ \r\n\ \r\n\ @param\ faktor\ der\ Faktor,\ um\ den\ die\ Intensitaetswerte\ angehoben\ werden\r\n
comment16.params=
comment16.target=void\ bild_kontrastOptimieren()
comment16.text=\r\n\ Aufgabe\:\ Kontrast\ optimieren\ \r\n
comment17.params=schwellwert
comment17.target=void\ bild_schwellwertAnwenden(int)
comment17.text=\r\n\ Aufgabe\:\ Schwellwertverfahren\ \r\n\ \r\n\ @param\ schwellwert\ der\ Schwellwert,\ der\ als\ Grenze\ genommen\ wird\r\n
comment18.params=eingangsbild
comment18.target=void\ bild_mittelwertfilter(Bild)
comment18.text=\r\n\ Aufgabe\:\ Mittelwertfilter\ 3x3\r\n\ \r\n\ @param\ eingangsbild\ das\ Bild,\ das\ gefiltert\ wird\r\n
comment19.params=posI\ posK
comment19.target=int\ mittelwert(int,\ int)
comment2.params=titel\ bild
comment2.target=Bild(java.lang.String,\ int[][])
comment2.text=\r\n\ Erzeuge\ ein\ neues\ Bild\ mit\ dem\ gegebenen\ Titel\ und\ den\ Bilddaten.\r\n\ \r\n\ @param\ titel\ die\ Titel\ des\ Bildes\r\n\ @param\ bild\ die\ Bilddaten\r\n
comment20.params=eingangsbild\ filter
comment20.target=void\ bild_linearerfilter(Bild,\ double[][])
comment20.text=\r\n\ Aufgabe\:\ Genereller\ Linearer\ Filter\ mit\ einem\ Filterkern\r\n\ \r\n\ @param\ eingangsbild\ das\ Bild,\ das\ gefiltert\ wird\r\n\ @param\ filter\ der\ Filterkern\r\n
comment21.params=posI\ posJ\ filter
comment21.target=int\ filtered(int,\ int,\ double[][])
comment22.params=eingangsbild
comment22.target=void\ bild_medianfilter(Bild)
comment22.text=\r\n\ Aufgabe\:\ Medianfilter\ 3x3\r\n\ \r\n\ @param\ eingangsbild\ das\ Bild,\ das\ gefiltert\ wird\r\n
comment23.params=posI\ posK
comment23.target=int\ median(int,\ int)
comment24.params=suchbild\ template
comment24.target=Bild\ bild_templatematching(Bild,\ Bild)
comment24.text=\r\n\ Aufgabe\:\ Template\ Matching\r\n\ \r\n\ @param\ suchbild\ das\ Bild,\ das\ durchsucht\ wird\r\n\ @param\ template\ das\ Bild,\ das\ gesucht\ wird\r\n
comment25.params=suchbild\ template\ posI\ posJ
comment25.target=int\ getDiff(Bild,\ Bild,\ int,\ int)
comment26.params=eingangsbild\ rotationszentrumSpalte\ rotationszentrumZeile\ winkel
comment26.target=Bild\ bild_rotation(Bild,\ int,\ int,\ double)
comment26.text=\r\n\ Aufgabe\:\ Geometrische\ Transformation\:\ Rotation.\ Beachten\ Sie,\ dass\ das\ Rotationszentrum\ zuerst\ in\ den\ Ursprung\ geschoben,\ dann\ rotiert\ und\ wieder\ zurueckgeschoben\ werden\ muss.\r\n\ \r\n\ @param\ eingangsbild\ das\ Bild,\ das\ veraendert\ wird\r\n\ @param\ rotationszentrumSpalte\ die\ u-Position\ des\ Rotationszentrums\r\n\ @param\ rotationszentrumZeile\ die\ v-Position\ des\ Rotationszentrums\r\n\ @param\ winkel\ der\ Rotationswinkel\ (Achtung\ in\ Radian)\r\n
comment27.params=eingangsbild\ rmax\ alpha
comment27.target=Bild\ bild_twirl(Bild,\ int,\ double)
comment27.text=\r\n\ Aufgabe\:\ Verzerren.\ Twirl-Transformation\:\ Rotation\ um\ alpha,\ die\ mit\ dem\ Abstand\ vom\ Zentrum\ abnimmt\ \r\n\ \r\n\ @param\ eingangsbild\ das\ Bild,\ das\ veraendert\ wird\r\n\ @param\ rmax\ der\ maximale\ Radius,\ bis\ wohin\ gedreht\ wird\r\n\ @param\ alpha\ der\ Rotationswinkel\ (Achtung\ in\ Radian)\r\n
comment3.params=
comment3.target=java.lang.String\ gibTitel()
comment3.text=\r\n\ Der\ Titel\ des\ Bildes.\r\n\ \r\n\ @return\ der\ Titel\ des\ Bildes\r\n
comment4.params=
comment4.target=int\ gibBreite()
comment4.text=\r\n\ Die\ Breite\ des\ Bildes.\ Falls\ kein\ Bild\ gesetzt\ worden\ ist,\ gibt\ die\ Methode\ 0\ zur\u00FCck.\r\n\ \r\n\ @return\ die\ Bildbreite,\ oder\ 0,\ falls\ kein\ Bild\ gesetzt\ worden\ ist.\r\n
comment5.params=
comment5.target=int\ gibHoehe()
comment5.text=\r\n\ Die\ H\u00F6he\ des\ Bildes.\ Falls\ kein\ Bild\ gesetzt\ worden\ ist,\ gibt\ die\ Methode\ 0\ zur\u00FCck.\r\n\ \r\n\ @return\ die\ Bildh\u00F6he,\ oder\ 0,\ falls\ kein\ Bild\ gesetzt\ worden\ ist.\r\n
comment6.params=spalte\ zeile
comment6.target=int\ gibIntensitaetswert(int,\ int)
comment6.text=\r\n\ Die\ Intensit\u00E4t\ an\ der\ gegebenen\ Spalte\ und\ Zeile.\ Falls\ die\ Angaben\ bez\u00FCglich\ Zeile\ oder\ Spalte\ ung\u00FCltig\ sind,\ wird\ 0\ zur\u00FCckgegeben.\ \r\n\ \r\n\ @param\ spalte\ die\ Spalte\r\n\ @param\ zeile\ die\ Zeile\r\n\ @return\ der\ Intensit\u00E4tswert\ zwischen\ 0\ (schwarz)\ und\ 255\ (weiss),\ oder\ 0\ bei\ ung\u00FCltigen\ Zeilen-/Spaltenwerten\ \r\n
comment7.params=
comment7.target=int[][]\ gibBilddaten()
comment7.text=\r\n\ Die\ Bilddaten\ des\ Bildes.\r\n\ \r\n\ @return\ die\ Bilddaten\ oder\ null,\ falls\ kein\ Bild\ gesetzt\ wurde.\r\n
comment8.params=
comment8.target=Bild\ erstelleKopie()
comment8.text=\r\n\ Bild\ kopieren\r\n\r\n\ @return\ eine\ Kopie\ des\ Bildes.\ Als\ Titel\ wird\ an\ den\ Originalnamen\ die\ Endung\ "\ -\ Kopie"\ angeh\u00E4ngt\r\n
comment9.params=
comment9.target=int[]\ gibHistogramm()
comment9.text=\r\n\ Aufgabe\:\ Histogramm\ berechnen\r\n\ \r\n\ @return\ das\ Histogramm\ \r\n
numComments=28
